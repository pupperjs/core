import IconImage(from="url-loader!../img/icon.png")

template
    //- Theme for prism.js (syntax highlighting)
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/prism/9000.0.1/themes/prism.min.css")

    .m-3
        .row
            //- Sidebar
            .col-12.col-lg-4.col-xl-3
                #docs-menu
                    img.mb-5(width="25%", :src="icon")

                    ul
                        each section in sections
                            li
                                unless section.subSections
                                    a.text-dark(href="#", @click="changeToSection({ section }, $event)")
                                        strong=section.title
                                else
                                    a.text-dark(href="#")
                                        strong=section.title

                                if section.subSections
                                    ul
                                        each subSection in section.subSections
                                            li
                                                a.text-dark(href="#" @click="changeToSection({ section: subSection, parent: section }, $event)")
                                                    =subSection.title

            //- Section content
            .col-12.col-lg-6.col-xl-7.mt-3.mt-lg-0
                .p-3
                    slot(name="section")

style(lang="sass")
    #docs-menu {
        position: sticky;
        top: 1rem;
        
        ul {
            padding: 0;
            margin: 0;

            li {
                list-style: none;

                a {
                    padding: 0.25rem;
                    width: 100%;
                    display: block;
                }

                ul {
                    margin-top: 0.25rem;
                    margin-left: 0.5rem;
                }

                &:not(:last-child) {
                    margin-bottom: 0.25rem;
                }
            }
        }
    }

    .hint {
        padding: 1rem;
        border-radius: 0.25rem;
        
        &.tip {
            background-color: var(--info);
            color: #fff;
        }
    }

data
    icon = IconImage
    sections = [
        {
            id: "getting-started",
            title: "Getting Started",
            subSections: [
                {
                    id: "introduction",
                    title: "Introduction",
                    component: require("../documentation/getting-started/Introduction.md").default
                },
                {
                    id: "quick-start",
                    title: "Quick Start",
                    component: require("../documentation/getting-started/Quick Start.md").default
                }
            ]
        },
        {
            id: "essentials",
            title: "Essentials",
            subSections: [
                {
                    id: "syntax",
                    title: "Syntax",
                    component: require("../documentation/essentials/Syntax.md").default
                },
                {
                    id: "conditional-rendering",
                    title: "Conditional Rendering",
                    component: require("../documentation/essentials/Conditional Rendering.md").default
                },
                {
                    id: "list-rendering",
                    title: "List Rendering",
                    component: require("../documentation/essentials/List Rendering.md").default
                }
            ]
        }
    ]

implementation
    #changeToSection(data, e)
        e?.preventDefault();

        const template = document.createElement("template");
        template.innerHTML = data.section.component;

        this.$slots.section.replace(template.content);

        let hash = "#/docs/";

        if (data.parent) {
            hash += data.parent.id + "/";
        }

        hash += data.section.id;

        window.location.hash = hash;

    when#mounted
        this.$nextTick(() => {
            const sectionParts = window.location.hash?.split("docs/")?.[1]?.split("/");

            let currentSection;
            let parentSection;

            if (sectionParts) {
                const firstPart = sectionParts?.shift();

                parentSection = this.sections.find((section) => section.id === firstPart);
                currentSection = parentSection;
                let part = 0;

                while(part <= sectionParts.length - 1) {
                    const currentPart = sectionParts[part++];

                    if (currentSection.id !== currentPart) {
                        currentSection = currentSection.subSections?.find((s) => s.id === currentPart);

                        if (!currentSection) {
                            break;
                        }
                    }
                }
            }

            if (!currentSection) {
                parentSection = this.sections.find((section) => section.id === "getting-started");
                currentSection = parentSection.subSections.find((section) => section.id === "introduction")
            }

            if (currentSection === parentSection) {
                parentSection = undefined;
            }

            if (currentSection) {
                this.changeToSection({ parent: parentSection, section: currentSection });
            }
        });